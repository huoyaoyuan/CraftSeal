# EditorConfig is awesome: http://editorconfig.org
# You can learn more about editorconfig here: https://docs.microsoft.com/visualstudio/ide/editorconfig-code-style-settings-reference
root = true

[*]
charset = utf-8
end_of_line = crlf
indent_style = space
tab_width = 4
insert_final_newline = true
trim_trailing_whitespace = true

[*.appxmanifest]
indent_size = 2
charset = utf-8

[*.xaml]
indent_size = 4
charset = utf-8-bom

[*.{*proj,props,targets}]
indent_size = 2
charset = utf-8
insert_final_newline = false

[*.{cs,vb}]
indent_size = 4
charset = utf-8-bom

#### .NET code style settings ####
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules

# Member qualification
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Modifiers
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = true:warning

# Parameters
dotnet_code_quality_unused_parameters = all:suggestion

# Parenthese around operators
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Auto properties
dotnet_style_prefer_auto_properties = true:warning

# Null check
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_coalesce_expression = true:suggestion

# Boolean expressions
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:silent

# Object and collection creation
dotnet_style_collection_initializer = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion

# Tuples
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion

# Predefined types
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Misc
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_simplified_interpolation = true:warning
dotnet_style_namespace_match_folder = true:warning

#### .NET formatting settings ####

# Organize using directives
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false


#### Naming rules ####

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Private static fields are camelCase and start with s_
dotnet_naming_rule.private_static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.private_static_fields_should_be_camel_case.symbols = private_static_fields
dotnet_naming_rule.private_static_fields_should_be_camel_case.style = private_static_field_style

dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields.required_modifiers = static

dotnet_naming_style.private_static_field_style.capitalization = camel_case
dotnet_naming_style.private_static_field_style.required_prefix = s_

# Private instance fields are camelCase and start with _
dotnet_naming_rule.private_instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.private_instance_fields_should_be_camel_case.symbols = private_instance_fields
dotnet_naming_rule.private_instance_fields_should_be_camel_case.style = private_instance_field_style

dotnet_naming_symbols.private_instance_fields.applicable_kinds = field
dotnet_naming_symbols.private_instance_fields.applicable_accessibilities = private

dotnet_naming_style.private_instance_field_style.capitalization = camel_case
dotnet_naming_style.private_instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

[*.cs]
#### C# code style settings ####

# Modifier order
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Global declaration
csharp_using_directive_placement = outside_namespace:warning
csharp_style_namespace_declarations = file_scoped:suggestion
csharp_style_prefer_top_level_statements = true:silent

# Expression-bodies
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion

# Type inferrence
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:silent
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion

# Lambda and local function
csharp_style_prefer_method_group_conversion = true:suggestion
csharp_prefer_static_local_function = true:suggestion
csharp_prefer_static_anonymous_function = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:warning

# Modifiers
csharp_style_prefer_readonly_struct = true:warning
csharp_style_prefer_readonly_struct_member = true:warning

# Pattern matching
csharp_style_prefer_not_pattern = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_pattern_matching = true:warning
csharp_style_prefer_extended_property_pattern = true:warning
csharp_style_prefer_null_check_over_type_check = true:warning

# Expression features
csharp_style_conditional_delegate_call = true:warning
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = when_multiline:suggestion
csharp_prefer_simple_default_expression = true:warning
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_throw_expression = true:warning

# Index and Range
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:warning

# Variable declaration
csharp_style_inlined_variable_declaration = true:warning
csharp_style_unused_value_assignment_preference = discard_variable:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion

# Misc language features
csharp_style_prefer_primary_constructors = true:suggestion
csharp_prefer_system_threading_lock = true:warning
csharp_style_prefer_tuple_swap = true:warning
csharp_style_prefer_unbound_generic_type_in_nameof = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion

#### C# format settings ####
# https://learn.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/csharp-formatting-options
csharp_indent_labels = one_less_than_current
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_switch_labels = true

[*.vb]
#### VB code style settings ####

# Modifier order
visual_basic_preferred_modifier_order = Partial,Default,Private,Protected,Public,Friend,NotOverridable,Overridable,MustOverride,Overloads,Overrides,MustInherit,NotInheritable,Static,Shared,Shadows,ReadOnly,WriteOnly,Dim,Const,WithEvents,Widening,Narrowing,Custom,Async:warning

# Unused variables
visual_basic_style_unused_value_expression_statement_preference = unused_local_variable : silent
visual_basic_style_unused_value_assignment_preference = unused_local_variable : silent

# Expressions
visual_basic_style_prefer_isnot_expression = true : suggestion
visual_basic_style_prefer_simplified_object_creation = true : warning
